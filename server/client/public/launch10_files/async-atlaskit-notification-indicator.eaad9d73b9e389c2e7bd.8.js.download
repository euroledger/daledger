try{window.performance.mark("async-atlaskit-notification-indicator.js:eval-start")}catch(e){}(window.webpackJsonp=window.webpackJsonp||[]).push([["async-atlaskit-notification-indicator"],{"./node_modules/@atlaskit/analytics-next/dist/es2019/hocs/withAnalyticsEvents.js":function(t,e,n){"use strict";var i=n("./node_modules/react/index.js"),o=n.n(i),a=n("./node_modules/@atlaskit/analytics-next/dist/es2019/hooks/useAnalyticsEvents.js");function s(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,i)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?s(Object(n),!0).forEach((function(e){d(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function d(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}e.a=(t={})=>e=>{const n=Object(i.forwardRef)((n,s)=>{const{patchedEventProps:d}=function(t={},e){const{createAnalyticsEvent:n}=Object(a.a)();return{patchedEventProps:Object(i.useMemo)(()=>Object.keys(t).reduce((i,o)=>{const a=t[o];if(!["object","function"].includes(typeof a))return i;const s=e[o],d=(...t)=>{const i="function"==typeof a?a(n,e):n(a);s&&"function"==typeof s&&s(...t,i)};return d?r(r({},i),{},{[o]:d}):i},{}),[t,e,n])}}(t,n),{createAnalyticsEvent:c}=Object(a.a)();return o.a.createElement(e,Object.assign({},n,d,{createAnalyticsEvent:c,ref:s}))});return n.displayName=`WithAnalyticsEvents(${e.displayName||e.name})`,n}},"./node_modules/@atlaskit/notification-indicator/dist/es2019/index.js":function(t,n,i){"use strict";i.r(n),i.d(n,"NotificationIndicator",(function(){return l}));var o=i("./node_modules/react/index.js"),a=i.n(o),s=i("./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/dist/esm/components/index.js");class r extends o.Component{constructor(){super(...arguments),this.visibilityChangesSinceTimer=0,this.state={count:null},this.onVisibilityChange=()=>{this.props.refreshOnVisibilityChange&&this.shouldRefresh()&&(this.visibilityChangesSinceTimer++,this.refresh("visibility"))},this.shouldRefresh=()=>!document.hidden||this.props.refreshOnHidden,this.timerTick=()=>{this.visibilityChangesSinceTimer=0,this.refresh("timer")},this.handleAnalytics=t=>{const{newCount:e,oldCount:n,source:i}=t;if(this.props.createAnalyticsEvent&&e>0&&0===n){this.props.createAnalyticsEvent({actionSubject:"notificationIndicator",action:"activated",attributes:{badgeCount:e,refreshSource:i}}).fire("navigation")}if(this.props.createAnalyticsEvent&&e!==n){this.props.createAnalyticsEvent({actionSubject:"notificationIndicator",action:"updated",attributes:{oldCount:n,newCount:e,refreshSource:i}}).fire("navigation")}},this.refresh=async t=>{if(!this.notificationLogProvider)return;if(!this.shouldRefresh())return;const n={source:t,visibilityChangesSinceTimer:this.visibilityChangesSinceTimer},i=this.props.onCountUpdating&&this.props.onCountUpdating(n)||{};if(!i.skip)try{const e=i.countOverride||(await this.notificationLogProvider.countUnseenNotifications({queryParams:{currentCount:this.state.count||0}})).count;if(null===this.state.count||this.state.count!==e){const n={oldCount:this.state.count||0,newCount:e,source:t};this.handleAnalytics(n),this.props.onCountUpdated&&this.props.onCountUpdated(n),this.setState({count:e})}}catch(e){}}}async componentDidMount(){this.notificationLogProvider=await this.props.notificationLogProvider,this.refresh("mount"),this.updateInterval(),document.addEventListener("visibilitychange",this.onVisibilityChange)}componentDidUpdate(t){t.refreshRate!==this.props.refreshRate&&this.updateInterval()}componentWillUnmount(){this.intervalId&&clearInterval(this.intervalId),document.removeEventListener("visibilitychange",this.onVisibilityChange)}updateInterval(){const{refreshRate:t}=this.props;this.intervalId&&clearInterval(this.intervalId),t&&t>0&&(this.intervalId=window.setInterval(this.timerTick,t))}render(){const{count:t}=this.state,{appearance:e,max:n}=this.props;return t?a.a.createElement("div",{"data-test-selector":"NotificationIndicator"},a.a.createElement(s.a,{max:n,appearance:e},t)):null}}r.displayName="NotificationIndicator",r.defaultProps={appearance:"important",max:9,refreshRate:0,refreshOnHidden:!1,refreshOnVisibilityChange:!0};var d=r,c=i("./node_modules/@atlaskit/analytics-next/dist/es2019/hocs/withAnalyticsEvents.js");const l=Object(c.a)()(d)},"./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/dist/esm/components/Container.js":function(t,e,n){"use strict";var i,o=n("./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/node_modules/tslib/tslib.es6.js"),a=n("./node_modules/styled-components/dist/styled-components.browser.esm.js").default.span(i||(i=Object(o.b)(["\n  ",";\n  border-radius: 2em;\n  display: inline-block;\n  font-size: 12px;\n  font-weight: normal;\n  line-height: 1;\n  min-width: 1px;\n  padding: 0.16666666666667em 0.5em;\n  text-align: center;\n"],["\n  ",";\n  border-radius: 2em;\n  display: inline-block;\n  font-size: 12px;\n  font-weight: normal;\n  line-height: 1;\n  min-width: 1px;\n  padding: 0.16666666666667em 0.5em;\n  text-align: center;\n"])),(function(t){return"\n    background-color: "+t.backgroundColor+";\n    color: "+t.textColor+";\n  "}));e.a=a},"./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/dist/esm/components/Format.js":function(t,e,n){"use strict";var i=n("./node_modules/react/index.js"),o=n.n(i),a=o.a.Fragment;e.a=function(t){var e="",n=t.children,i=void 0===n?0:n,s=t.max,r=void 0===s?0:s;return i<0&&(i=0),r<0&&(r=0),e=r&&r<i?r+"+":i===1/0?"\u221e":i,o.a.createElement(a,null,e)}},"./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/dist/esm/components/index.js":function(t,e,n){"use strict";var i=n("./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/node_modules/tslib/tslib.es6.js"),o=n("./node_modules/react/index.js"),a=n.n(o),s=n("./node_modules/@atlaskit/theme/dist/es2019/components/Theme.js"),r=n("./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/dist/esm/theme.js"),d=n("./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/dist/esm/components/Container.js"),c=n("./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/dist/esm/components/Format.js");e.a=function(t){var e=t.theme,n=t.appearance,o=void 0===n?"default":n,l=t.children,u=void 0===l?0:l,m=t.max,h=void 0===m?99:m,p=t.testId;return a.a.createElement(r.a.Provider,{value:e},a.a.createElement(s.a.Consumer,null,(function(t){var e=t.mode;return a.a.createElement(r.a.Consumer,{appearance:o,mode:e},(function(t){return a.a.createElement(d.a,Object(i.a)({},t,{"data-testid":p}),"string"==typeof u?u:a.a.createElement(c.a,{max:h},u))}))})))}},"./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/dist/esm/theme.js":function(t,e,n){"use strict";n.d(e,"b",(function(){return a})),n.d(e,"c",(function(){return s})),n.d(e,"a",(function(){return r}));var i=n("./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/node_modules/tslib/tslib.es6.js"),o=n("./node_modules/@atlaskit/theme/dist/es2019/utils/createTheme.js"),a={added:{light:"#E3FCEF",dark:"#E3FCEF"},default:{light:"#DFE1E6",dark:"#3B475C"},important:{light:"#DE350B",dark:"#DE350B"},primary:{light:"#0052CC",dark:"#4C9AFF"},primaryInverted:{light:"#FFFFFF",dark:"#9FB0CC"},removed:{light:"#FFEBE6",dark:"#FFEBE6"}},s={added:{light:"#006644",dark:"#006644"},default:{light:"#172B4D",dark:"#E6EDFA"},important:{light:"#FFFFFF",dark:"#FFFFFF"},primary:{light:"#FFFFFF",dark:"#0D1424"},primaryInverted:{light:"#0747A6",dark:"#0D1424"},removed:{light:"#BF2600",dark:"#BF2600"}},r=Object(o.a)((function(t){var e=t.appearance,n=t.mode;return"object"==typeof e?Object(i.a)({backgroundColor:a.default.light,textColor:s.default.light},e):{backgroundColor:a[e][n],textColor:s[e][n]}}))},"./node_modules/@atlaskit/notification-indicator/node_modules/@atlaskit/badge/node_modules/tslib/tslib.es6.js":function(t,e,n){"use strict";n.d(e,"a",(function(){return i})),n.d(e,"b",(function(){return o}));var i=function(){return(i=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function o(t,e){return Object.defineProperty?Object.defineProperty(t,"raw",{value:e}):t.raw=e,t}}}]);try{window.__jsEvalStop("async-atlaskit-notification-indicator.js")}catch(e){}
//# sourceMappingURL=https://statlas.prod.atl-paas.net/jira-frontend-source-maps/assets/async-atlaskit-notification-indicator.f1665a3b116f95cb7b38.8.js.map